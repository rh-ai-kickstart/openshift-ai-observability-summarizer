name: Undeploy from OpenShift

on:
  workflow_run:
    # Automatically undeploy after successful deployment
    workflows: ["Deploy to OpenShift"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      namespace:
        description: 'Target namespace for undeployment'
        required: false
        default: 'test-workflow-deploy'
        type: string
      confirm_uninstall:
        description: 'Confirm uninstall by typing "CONFIRM" (not required for automatic runs)'
        required: false
        type: string
      delay_minutes:
        description: 'Minutes to wait before auto-uninstall (default: 60)'
        required: false
        default: '10'
        type: string

env:
  NAMESPACE: ${{ github.event.inputs.namespace || 'test-workflow-deploy' }}
  DELAY_MINUTES: ${{ github.event.inputs.delay_minutes || '10' }}

jobs:
  undeploy:
    runs-on: ubuntu-latest
    # Run if:
    # 1. Deploy workflow completed successfully (automatic)
    # 2. Manual trigger with confirmation (manual)
    if: ${{ (github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch' && github.event.inputs.confirm_uninstall == 'CONFIRM') }}

    steps:
      - name: Determine run type and delay
        id: run_info
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "run_type=automatic" >> $GITHUB_OUTPUT
            echo "ü§ñ Automatic undeploy triggered after successful deployment"
            echo "‚è∞ Will wait ${{ env.DELAY_MINUTES }} minutes before uninstalling from namespace: ${{ env.NAMESPACE }}"
          else
            echo "run_type=manual" >> $GITHUB_OUTPUT
            echo "üë§ Manual undeploy triggered for namespace: ${{ env.NAMESPACE }}"
          fi

      - name: Wait before auto-uninstall
        if: steps.run_info.outputs.run_type == 'automatic'
        run: |
          echo "‚è≥ Waiting ${{ env.DELAY_MINUTES }} minutes before auto-uninstall..."
          echo "This gives time to test the deployment before cleanup."
          echo "To cancel this workflow, go to Actions tab and cancel this run."
          sleep ${{ env.DELAY_MINUTES }}m

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install OpenShift CLI
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      - name: Login to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true # Set to false if we have a valid certificate

      - name: Show deployment context
        run: |
          echo "üìã Undeploy Context:"
          echo "  Run Type: ${{ steps.run_info.outputs.run_type }}"
          echo "  Namespace: ${{ env.NAMESPACE }}"
          echo "  Trigger: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "  Triggered by: Deploy workflow completion"
            echo "  Deploy status: ${{ github.event.workflow_run.conclusion }}"
          fi

      - name: Show resources before uninstall
        run: |
          echo "üìä Resources in namespace ${{ env.NAMESPACE }} before uninstall:"
          make status NAMESPACE=${{ env.NAMESPACE }}

      - name: Uninstall metrics-summarizer with Makefile
        env:
          NAMESPACE: ${{ env.NAMESPACE }}
        run: |
          echo "üóëÔ∏è Uninstalling from namespace: ${{ env.NAMESPACE }}"
          make uninstall NAMESPACE=${{ env.NAMESPACE }}